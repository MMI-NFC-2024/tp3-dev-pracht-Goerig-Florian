---
import Layout from "../../layouts/Layout.astro";
import GraphicSpecies from "../../components/GraphicSpecies.astro";
---

<Layout title="Ancres — TP3">
  <h1 class="text-3xl font-extrabold mb-4">
    Espèces — Page unique avec ancres (slider)
  </h1>

  <!-- Select de navigation (remplace les liens d’ancrage) -->
  <div class="mb-3">
    <label for="species-anchor" class="sr-only">Aller à l’espèce</label>
    <select
      id="species-anchor"
      class="rounded-lg border border-gray-300 bg-white px-3 py-2 text-sm shadow-sm"
    >
      <option value="adelie" selected>Adelie</option>
      <option value="gentoo">Gentoo</option>
      <option value="chinstrap">Chinstrap</option>
    </select>
  </div>

  <!-- Slider horizontal -->
  <div
    id="slider"
    class="flex overflow-x-auto gap-4 pb-2 scroll-smooth snap-x snap-mandatory"
  >
    <section
      id="adelie"
      class="snap-start flex-[0_0_100%] min-w-full bg-white border border-gray-200 rounded-xl p-4"
    >
      <GraphicSpecies species="Adelie" title="Adelie" />
    </section>
    <section
      id="gentoo"
      class="snap-start flex-[0_0_100%] min-w-full bg-white border border-gray-200 rounded-xl p-4"
    >
      <GraphicSpecies species="Gentoo" title="Gentoo" />
    </section>
    <section
      id="chinstrap"
      class="snap-start flex-[0_0_100%] min-w-full bg-white border border-gray-200 rounded-xl p-4"
    >
      <GraphicSpecies species="Chinstrap" title="Chinstrap" />
    </section>
  </div>

  <script>
    // Sur changement, on met à jour location.hash → provoque le scroll vers la slide
    const selAnchor = document.getElementById("species-anchor");
    selAnchor?.addEventListener("change", (evt) => {
      const value = /** @type {HTMLSelectElement} */ (evt.target).value;
      location.hash = value; // "#adelie" | "#gentoo" | "#chinstrap"
      // Optionnel: si tu veux forcer le scroll en plus (au cas où) :
      document
        .getElementById(value)
        ?.scrollIntoView({
          behavior: "smooth",
          inline: "start",
          block: "nearest",
        });
    });

    // Si on arrive avec un hash dans l’URL, on positionne le select en conséquence
    const init = location.hash?.slice(1);
    if (init) {
      const opt = selAnchor?.querySelector(`option[value="${init}"]`);
      if (opt) selAnchor.value = init;
    }
  </script>
</Layout>
